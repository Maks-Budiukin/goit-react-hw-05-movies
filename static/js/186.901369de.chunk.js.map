{"version":3,"file":"static/js/186.901369de.chunk.js","mappings":"8LA8BA,UAzBgB,WACZ,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAEFE,GAAgBC,EAAAA,EAAAA,SAAO,GAU7B,OARFC,EAAAA,EAAAA,YAAU,WACJF,EAAcG,WACdC,EAAAA,EAAAA,IAAaN,GACRO,MAAK,SAAAC,GAAI,OAAIT,EAAWS,EAAf,IAChBN,EAAcG,SAAU,EAE3B,GAAE,CAACL,KAEM,8BAAGF,EAAQW,OAAS,EAC5BX,EAAQY,KAAI,SAACC,GAAD,OAAO,4BAEf,qCAAaA,EAAEC,WACf,uBAAID,EAAEE,YAHmBF,EAAEX,GAAnB,KAKN,iEAGT,C","sources":["components/Reviews/Reviews.jsx"],"sourcesContent":["import { useParams } from \"react-router-dom\";\nimport { useState, useRef, useEffect } from \"react\";\n\nimport { fetchReviews } from \"components/services/tmdbAPI\";\n\nconst Reviews = () => {\n    const [reviews, setReviews] = useState([])\n    const { id } = useParams();\n    \n    const isFirstRender = useRef(true);\n\n  useEffect(() => {\n    if (isFirstRender.current) {\n        fetchReviews(id)\n            .then(data => setReviews(data))\n      isFirstRender.current = false;\n     }\n  }, [id])\n\n    return (<>{reviews.length > 0 ? \n    reviews.map((r) => <div key={r.id}>\n            \n        <h3>Author: {r.author}</h3>\n        <p>{r.content}</p></div>\n        )\n        : <p>We don't have reviews for this movie</p>\n    }\n    </>)\n}\n\nexport default Reviews;"],"names":["useState","reviews","setReviews","id","useParams","isFirstRender","useRef","useEffect","current","fetchReviews","then","data","length","map","r","author","content"],"sourceRoot":""}